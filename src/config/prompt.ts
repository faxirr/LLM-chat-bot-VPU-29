// config/prompt.ts

export const SYSTEM_PROMPT = `–í–∏ - –¥—Ä—É–∂–Ω—ñ–π —Ç–∞ –∫–æ—Ä–∏—Å–Ω–∏–π —à–∫—ñ–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î —É—á–Ω—è–º –∑ —ó—Ö–Ω—ñ–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏. 

–í–∞—à—ñ –æ—Å–Ω–æ–≤–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
- –í–∏ —Ä–æ–∑–º–æ–≤–ª—è—î—Ç–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é
- –í–∏ –∑–∞–≤–∂–¥–∏ –≤–≤—ñ—á–ª–∏–≤—ñ —Ç–∞ —Ç–µ—Ä–ø–ª—è—á—ñ
- –í–∏ –ø–æ—è—Å–Ω—é—î—Ç–µ —Å–∫–ª–∞–¥–Ω—ñ —Ç–µ–º–∏ –ø—Ä–æ—Å—Ç–æ—é –º–æ–≤–æ—é
- –í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ –¥–æ–º–∞—à–Ω—ñ–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏, –∞–ª–µ –Ω–µ —Ä–æ–±–∏—Ç–µ —ó—Ö –∑–∞ —É—á–Ω—ñ–≤
- –í–∏ –∑–∞–æ—Ö–æ—á—É—î—Ç–µ –∫—Ä–∏—Ç–∏—á–Ω–µ –º–∏—Å–ª–µ–Ω–Ω—è —Ç–∞ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è
- –í–∏ –Ω–∞–¥–∞—î—Ç–µ –∫–æ—Ä–∏—Å–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ —Ç–∞ –∞–Ω–∞–ª–æ–≥—ñ—ó
- –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ—Ä–∞–¥–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è

–Ø–∫—â–æ –≤–∏ –Ω–µ –∑–Ω–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, —á–µ—Å–Ω–æ –ø—Ä–æ —Ü–µ —Å–∫–∞–∂—ñ—Ç—å. –Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ–µ—Ç–∏—á–Ω–µ –∞–±–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω–µ - –≤–≤—ñ—á–ª–∏–≤–æ –≤—ñ–¥–º–æ–≤—Ç–µ.

–§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑—Ä–æ–∑—É–º—ñ–ª—É –º–æ–≤—É
- –†–æ–∑–±–∏–≤–∞–π—Ç–µ —Å–∫–ª–∞–¥–Ω—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –Ω–∞ –∫—Ä–æ–∫–∏
- –î–æ–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–∫–ª–∞–¥–∏ –¥–µ –º–æ–∂–ª–∏–≤–æ
- –ó–∞–æ—Ö–æ—á—É–π—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è`;

// –í–∞—à–∞ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è generatePrompt
export const generatePrompt = (userInput: string) => {
    return `${SYSTEM_PROMPT}\n\n–ü–∏—Ç–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userInput}`;
};

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç—É –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∑ Pinecone
export const generateContextPrompt = (
    userInput: string,
    contextData: Array<{ text: string; score: number }>
) => {
    const contextSection = contextData.map((item, index) =>
        `üìö –î–∂–µ—Ä–µ–ª–æ ${index + 1} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ—Å—Ç—å: ${(item.score * 100).toFixed(1)}%):
${item.text}`
    ).join('\n\n');

    return `${SYSTEM_PROMPT}

–î–û–î–ê–¢–ö–û–í–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ó –ë–ê–ó–ò –ó–ù–ê–ù–¨:
${contextSection}

–ü–ò–¢–ê–ù–ù–Ø –ö–û–†–ò–°–¢–£–í–ê–ß–ê: ${userInput}

–Ü–ù–°–¢–†–£–ö–¶–Ü–á –î–õ–Ø –í–Ü–î–ü–û–í–Ü–î–Ü:
- –î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å —Å–≤–æ—î—ó —Ä–æ–ª—ñ —à–∫—ñ–ª—å–Ω–æ–≥–æ –ø–æ–º—ñ—á–Ω–∏–∫–∞
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑ –±–∞–∑–∏ –∑–Ω–∞–Ω—å –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
- –Ø–∫—â–æ –±–∞–∑–∞ –∑–Ω–∞–Ω—å –º—ñ—Å—Ç–∏—Ç—å –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —ñ–Ω—Ç–µ–≥—Ä—É–π—Ç–µ —ó—ó —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
- –Ø–∫—â–æ –≤ –±–∞–∑—ñ –∑–Ω–∞–Ω—å –Ω–µ–º–∞—î –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –∑–Ω–∞–Ω—å
- –ó–∞–≤–∂–¥–∏ –∑–∞–æ—Ö–æ—á—É–π—Ç–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –∫—Ä–∏—Ç–∏—á–Ω–µ –º–∏—Å–ª–µ–Ω–Ω—è
- –ù–∞–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–∫–ª–∞–¥–∏ —Ç–∞ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø–æ –∫—Ä–æ–∫–∞—Ö

–í–Ü–î–ü–û–í–Ü–î–¨:`;
};

// –ü—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–∑—é–º—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É (—è–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞–±–∞–≥–∞—Ç–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó)
export const generateSummaryPrompt = (texts: string[]) => {
    return `–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ç–∞ —É–∑–∞–≥–∞–ª—å–Ω–∏ –Ω–∞—Å—Ç—É–ø–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑ –±–∞–∑–∏ –∑–Ω–∞–Ω—å, –≤–∏–¥—ñ–ª–∏–≤—à–∏ –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à—ñ –º–æ–º–µ–Ω—Ç–∏ –¥–ª—è —à–∫—ñ–ª—å–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è:

${texts.map((text, index) => `${index + 1}. ${text}`).join('\n\n')}

–°—Ç–≤–æ—Ä–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –≤–∏–∫–ª–∞–¥ –∫–ª—é—á–æ–≤–∏—Ö –º–æ–º–µ–Ω—Ç—ñ–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é:`;
};

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–∏—Ç–∞–Ω—å
export const QUESTION_TYPES = {
    MATH: {
        keywords: ['–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ä—ñ–≤–Ω—è–Ω–Ω—è', '—Ñ–æ—Ä–º—É–ª–∞', '–æ–±—á–∏—Å–ª–∏', '—Ä–æ–∑–≤\'—è–∂–∏'],
        specialInstructions: '–†–æ–∑–±–∏–≤–∞–π—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ —Ä–æ–∑–≤\'—è–∑–∫–∏ –Ω–∞ —á—ñ—Ç–∫—ñ –∫—Ä–æ–∫–∏ –∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º –∫–æ–∂–Ω–æ–≥–æ –µ—Ç–∞–ø—É.'
    },
    SCIENCE: {
        keywords: ['—Ñ—ñ–∑–∏–∫–∞', '—Ö—ñ–º—ñ—è', '–±—ñ–æ–ª–æ–≥—ñ—è', '–µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç', '–∑–∞–∫–æ–Ω'],
        specialInstructions: '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –Ω–∞—É–∫–æ–≤—ñ —Ç–µ—Ä–º—ñ–Ω–∏, –∞–ª–µ –ø–æ—è—Å–Ω—é–π—Ç–µ —ó—Ö –ø—Ä–æ—Å—Ç–æ—é –º–æ–≤–æ—é. –î–æ–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏.'
    },
    HISTORY: {
        keywords: ['—ñ—Å—Ç–æ—Ä—ñ—è', '–ø–æ–¥—ñ—è', '–¥–∞—Ç–∞', '–ø–µ—Ä—ñ–æ–¥', '–µ–ø–æ—Ö–∞'],
        specialInstructions: '–ù–∞–¥–∞–≤–∞–π—Ç–µ —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–∞ –ø–æ–≤\'—è–∑—É–π—Ç–µ –ø–æ–¥—ñ—ó –∑ —Å—É—á–∞—Å–Ω—ñ—Å—Ç—é.'
    },
    LANGUAGE: {
        keywords: ['—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞', '–ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–≥—Ä–∞–º–∞—Ç–∏–∫–∞', '–ø—Ä–∞–≤–æ–ø–∏—Å'],
        specialInstructions: '–ù–∞–¥–∞–≤–∞–π—Ç–µ —á—ñ—Ç–∫—ñ –ø—Ä–∞–≤–∏–ª–∞ –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.'
    }
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –ø–∏—Ç–∞–Ω–Ω—è
export const detectQuestionType = (question: string): string | null => {
    const lowerQuestion = question.toLowerCase();

    for (const [type, config] of Object.entries(QUESTION_TYPES)) {
        if (config.keywords.some(keyword => lowerQuestion.includes(keyword))) {
            return type;
        }
    }

    return null;
};